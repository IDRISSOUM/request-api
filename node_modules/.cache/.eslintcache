[{"/Users/mac/Documents/request/src/index.js":"1","/Users/mac/Documents/request/src/App.js":"2","/Users/mac/Documents/request/src/components/NavBar.js":"3","/Users/mac/Documents/request/src/components/AllEvents.js":"4","/Users/mac/Documents/request/src/components/EditEvents.js":"5","/Users/mac/Documents/request/src/components/NotFound.js":"6","/Users/mac/Documents/request/src/components/CodeFound.js":"7","/Users/mac/Documents/request/src/components/AddEvents.js":"8","/Users/mac/Documents/request/src/service/api.js":"9","/Users/mac/Documents/request/src/components/cities/AllCities.js":"10","/Users/mac/Documents/request/src/components/cities/EditCities.js":"11","/Users/mac/Documents/request/src/components/cities/AddCities.js":"12","/Users/mac/Documents/request/src/components/cities/Cities.js":"13","/Users/mac/Documents/request/src/components/location/AllLocations.js":"14","/Users/mac/Documents/request/src/components/location/EditLocation.js":"15","/Users/mac/Documents/request/src/components/location/AddLocation.js":"16","/Users/mac/Documents/request-test/src/index.js":"17","/Users/mac/Documents/request-test/src/App.js":"18","/Users/mac/Documents/request-test/src/components/AddEvents.js":"19","/Users/mac/Documents/request-test/src/components/NavBar.js":"20","/Users/mac/Documents/request-test/src/components/EditEvents.js":"21","/Users/mac/Documents/request-test/src/components/CodeFound.js":"22","/Users/mac/Documents/request-test/src/components/NotFound.js":"23","/Users/mac/Documents/request-test/src/components/AllEvents.js":"24","/Users/mac/Documents/request-test/src/components/cities/AllCities.js":"25","/Users/mac/Documents/request-test/src/components/cities/EditCities.js":"26","/Users/mac/Documents/request-test/src/components/cities/AddCities.js":"27","/Users/mac/Documents/request-test/src/components/cities/Cities.js":"28","/Users/mac/Documents/request-test/src/components/location/AddLocation.js":"29","/Users/mac/Documents/request-test/src/components/location/AllLocations.js":"30","/Users/mac/Documents/request-test/src/components/location/EditLocation.js":"31","/Users/mac/Documents/request-test/src/service/api.js":"32"},{"size":196,"mtime":1647439010708,"results":"33","hashOfConfig":"34"},{"size":1556,"mtime":1647501498349,"results":"35","hashOfConfig":"34"},{"size":1275,"mtime":1647501573719,"results":"36","hashOfConfig":"34"},{"size":2863,"mtime":1647502361505,"results":"37","hashOfConfig":"34"},{"size":2715,"mtime":1647497804836,"results":"38","hashOfConfig":"34"},{"size":0,"mtime":1647440671531,"results":"39","hashOfConfig":"34"},{"size":0,"mtime":1647441098747,"results":"40","hashOfConfig":"34"},{"size":2131,"mtime":1647497778327,"results":"41","hashOfConfig":"34"},{"size":1523,"mtime":1647499093901,"results":"42","hashOfConfig":"34"},{"size":2420,"mtime":1647502349145,"results":"43","hashOfConfig":"34"},{"size":2301,"mtime":1647497623765,"results":"44","hashOfConfig":"34"},{"size":1644,"mtime":1647466259807,"results":"45","hashOfConfig":"34"},{"size":152,"mtime":1647454801409,"results":"46","hashOfConfig":"34"},{"size":3628,"mtime":1647502339809,"results":"47","hashOfConfig":"34"},{"size":2834,"mtime":1647501178628,"results":"48","hashOfConfig":"34"},{"size":1968,"mtime":1647502465886,"results":"49","hashOfConfig":"34"},{"size":241,"mtime":1647606078630,"results":"50","hashOfConfig":"51"},{"size":1554,"mtime":1647524092508,"results":"52","hashOfConfig":"51"},{"size":4258,"mtime":1647623658098,"results":"53","hashOfConfig":"51"},{"size":1275,"mtime":1647501573719,"results":"54","hashOfConfig":"51"},{"size":3887,"mtime":1647521434389,"results":"55","hashOfConfig":"51"},{"size":0,"mtime":1647441098747,"results":"56","hashOfConfig":"51"},{"size":0,"mtime":1647440671531,"results":"57","hashOfConfig":"51"},{"size":5143,"mtime":1647589586122,"results":"58","hashOfConfig":"51"},{"size":4429,"mtime":1647590279300,"results":"59","hashOfConfig":"51"},{"size":2307,"mtime":1647520821268,"results":"60","hashOfConfig":"51"},{"size":2274,"mtime":1647625259487,"results":"61","hashOfConfig":"51"},{"size":152,"mtime":1647454801409,"results":"62","hashOfConfig":"51"},{"size":6052,"mtime":1647625066127,"results":"63","hashOfConfig":"51"},{"size":6779,"mtime":1647590563145,"results":"64","hashOfConfig":"51"},{"size":6396,"mtime":1647524460794,"results":"65","hashOfConfig":"51"},{"size":1510,"mtime":1647611741781,"results":"66","hashOfConfig":"51"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1kgvma7",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"spkdug",{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"/Users/mac/Documents/request/src/index.js",[],[],["179","180"],"/Users/mac/Documents/request/src/App.js",["181","182","183"],[],"/Users/mac/Documents/request/src/components/NavBar.js",["184"],[],"import React from 'react';\nimport { AppBar, Toolbar, makeStyles } from '@material-ui/core';\nimport {NavLink, Link} from 'react-router-dom'\n\n\nconst useStyle = makeStyles({\n    header: {\n        background: '#111111'\n    },\n    tabs: {\n        color: '#FFFFFF',\n        marginRight: 20,\n        textDecoration: 'none',\n        fontSize: 20\n    }\n})\n\nconst NavBar = () => {\n    const classes = useStyle();\n    return (\n        <AppBar position=\"static\" className={classes.header}>\n            <Toolbar>\n                <NavLink className={classes.tabs} to=\"./\" >Api Test Request</NavLink>\n                <NavLink className={classes.tabs} to=\"all\" >All Events</NavLink>\n                {/* <NavLink className={classes.tabs} to=\"add\" >Add Events</NavLink> */}\n                <NavLink className={classes.tabs} to=\"all-ci\" >All Cities</NavLink>\n                {/* <NavLink className={classes.tabs} to=\"add-ci\" >Add Cities</NavLink> */}\n                <NavLink className={classes.tabs} to=\"all-l\" >All Locations</NavLink>\n                {/* <NavLink className={classes.tabs} to=\"add-l\" >Add Locations</NavLink> */}\n                {/* <NavLink className={classes.tabs} to=\"add\" >Add Events</NavLink> */}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NavBar;","/Users/mac/Documents/request/src/components/AllEvents.js",["185"],[],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { getEvents, deleteEvent } from '../service/api';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 50px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 15\n        }\n    }\n})\n\nfunction AllEvents() {\n    const [events, setEvents] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllEvents();\n    }, []);\n\n\n    const getAllEvents = async () => {\n        let response = await getEvents();\n        setEvents(response.data);\n    }\n\n    const deleteEventData = async (id) => {\n        await deleteEvent(id);\n        getAllEvents();\n    }\n\n   \n\n\n    return (\n        <>\n      <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>Nº</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Created</TableCell>\n                    <TableCell>Status</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {events.map((event) => (\n                    <TableRow className={classes.row} key={event.id}>\n                        <TableCell>{event.id}</TableCell>\n                        <TableCell>{event.name}</TableCell>\n                        <TableCell>{event.location}</TableCell>\n                        <TableCell>{event.event_date}</TableCell>\n                        <TableCell>{event.description}</TableCell>\n                        <TableCell>{event.created}</TableCell>\n                        <TableCell>{event.status}</TableCell>\n                        <TableCell>\n                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} component={Link} to={`/edit/${event.id}`}>Edit</Button>\n                        </TableCell>\n                        <TableCell>\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteEventData(event.id)}>Delete</Button> \n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n        <br/>\n        <div className=\"d-flex justify-content-center\">\n         <Link to=\"/add-l\" type=\"button\" className=\"btn btn-secondary ml-2\"><Button>Add Event</Button></Link>\n        </div>\n     </>\n    )\n}\n\nexport default AllEvents;","/Users/mac/Documents/request/src/components/EditEvents.js",["186"],["187"],"import React, { useState, useEffect } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { getEvents, editEvent } from '../service/api';\nimport {Link} from 'react-router-dom'\n\nconst initialValue = {\n    name: '',\n    description: '',\n    event_date: '',\n    location: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\n\n\nconst EditEvents = () => {\n    let navigate = useNavigate();\n    const classes = useStyles();\n    const { id } = useParams();\n    const [event, setEvents] = useState(initialValue);\n\n\n    useEffect(() => {\n        loadEventDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const loadEventDetails = async() => {\n        const response = await getEvents(id);\n        setEvents(response.data);\n    }\n\n    console.log('AAAAAAA?????????', loadEventDetails)\n\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setEvents({...event, [e.target.name]: e.target.value})\n    }\n\n    console.log('DDDDDDDDDD????????????', onValueChange)\n\n    const addEventDetails = async() => {\n        await editEvent(id, event);\n        navigate.push('/all');\n    }\n    \n    return (\n        <Form>\n            <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <Label for=\"exampleSelect\">Select Location</Label>\n            <Input type=\"select\" id=\"exampleSelect\" placeholder=\"select location\" onChange={(e) => onValueChange(e)}>\n                <option></option>          \n            </Input>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"exampleEmail\">Name</Label>\n            <Input type=\"name\" name=\"name\" id=\"exampleEmail\" placeholder=\"event name\" onChange={(e) => onValueChange(e)}/>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"date\">Event Date</Label>\n            <Input type=\"date\"  id=\"exampleText\" placeholder=\"event date\" onChange={(e) => onValueChange(e)}/>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"description\">description</Label>\n            <Input type=\"textarea\" id=\"exampleText\" placeholder=\"event description\"  onChange={(e) => onValueChange(e)} />\n            </FormGroup>\n            <Button onClick={() => addEventDetails()}>Add Events</Button>\n            <Link to=\"/all\" className=\"btn btn-primary ml-2\"><Button>Cancel</Button></Link>\n        </Form>\n    );\n};\n\nexport default EditEvents;","/Users/mac/Documents/request/src/components/NotFound.js",[],[],"/Users/mac/Documents/request/src/components/CodeFound.js",[],[],"/Users/mac/Documents/request/src/components/AddEvents.js",["188","189"],[],"import React, { useState } from 'react';\nimport { addEvent } from '../service/api';\nimport {useNavigate} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\n\nconst initialValue = {\n    name: '',\n    description: '',\n    event_date: '',\n    location: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\n\n\nconst AddEvents = () => {\n    let navigate = useNavigate();\n    const classes = useStyles();\n    const [event, setEvents] = useState(initialValue);\n\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setEvents({...event, [e.target.name]: e.target.value})\n    }\n\n    const addEventDetails = async() => {\n        await addEvent(event);\n        navigate.push('./all');\n    }\n    \n    return (\n        <Form>\n            <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Add Event</Typography>\n            <Label for=\"exampleSelect\">Select Location</Label>\n            <Input type=\"select\" id=\"exampleSelect\" placeholder=\"select location\">\n                <option></option>          \n            </Input>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"exampleEmail\">Name</Label>\n            <Input type=\"name\" name=\"name\" id=\"exampleEmail\" placeholder=\"event name\" />\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"date\">Event Date</Label>\n            <Input type=\"date\"  id=\"exampleText\" placeholder=\"event date\" />\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"description\">description</Label>\n            <Input type=\"textarea\" id=\"exampleText\" placeholder=\"event description\" />\n            </FormGroup>\n            <Button onClick={() => addEventDetails()}>Add Events</Button>\n            <Link to=\"/all\" className=\"btn btn-primary ml-2\"><Button>Cancel</Button></Link>\n        </Form>\n    );\n};\n\nexport default AddEvents;","/Users/mac/Documents/request/src/service/api.js",[],[],"/Users/mac/Documents/request/src/components/cities/AllCities.js",["190"],[],"/Users/mac/Documents/request/src/components/cities/EditCities.js",[],["191","192"],"/Users/mac/Documents/request/src/components/cities/AddCities.js",["193","194","195"],[],"import react, { useState } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport { addCities } from '../../service/api';\n\nconst initialValue = {\n    name: '',\n    code: '',\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst AddCities = () => {\n    const [cities, setCities] = useState(initialValue);\n    const { name, code,  } = cities;\n    const classes = useStyles();\n    let navigate = useNavigate();\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setCities({...cities, [e.target.name]: e.target.value})\n    }\n\n    const addCitiesDetails = async() => {\n        await addCities(cities);\n        navigate.push('./all');\n    }\n\n    return (\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Add Cities</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Code</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => addCitiesDetails()}>Add Cities</Button>\n            </FormControl>\n        </FormGroup>\n    )\n}\n\nexport default AddCities;","/Users/mac/Documents/request/src/components/cities/Cities.js",[],[],"/Users/mac/Documents/request/src/components/location/AllLocations.js",["196"],[],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { getLocations, deleteLocations } from '../../service/api';\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: '50%',\n        margin: '30px 10px 10px 30px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 15\n        }\n    }\n})\n\nfunction AllLocate() {\n    const [locate, setLocate] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllLocations();\n    }, []);\n\n\n    const getAllLocations = async () => {\n        let response = await getLocations();\n        setLocate(response.data);\n    }\n\n    const deleteLocateData = async (id) => {\n        await deleteLocations(id);\n        getAllLocations();\n    }\n\n    return (\n        <>\n      <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>Nº</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Rent</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Phone</TableCell>\n                    <TableCell>Contact Person</TableCell>\n                    <TableCell>Coordinates</TableCell>\n                    <TableCell>Street Number</TableCell>\n                    <TableCell>Street Name</TableCell>\n                    <TableCell>Code Postal</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Date Created</TableCell>\n                    <TableCell>Date Created</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {locate.map((cities) => (\n                    <TableRow className={classes.row} key={locate.id}>\n                        <TableCell>{cities.id}</TableCell>\n                        <TableCell>{cities.name}</TableCell>\n                        <TableCell>{cities.rent}</TableCell>\n                        <TableCell>{cities.email}</TableCell>\n                        <TableCell>{cities.phone}</TableCell>\n                        <TableCell>{cities.contact_person}</TableCell>\n                        <TableCell>{cities.lon}</TableCell>\n                        <TableCell>{cities.lat}</TableCell>\n                        <TableCell>{cities.street_number}</TableCell>\n                        <TableCell>{cities.street_name}</TableCell>\n                        <TableCell>{cities.postal_code}</TableCell>\n                        <TableCell>{cities.status}</TableCell>\n                        <TableCell>{cities.time_added}</TableCell>\n                        <TableCell>\n                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} element={Link} to={`/edit-l/${locate.id}`}>Edit</Button>\n                        </TableCell>\n                        <TableCell>\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteLocateData(cities.id)}>Delete</Button> \n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n        <br/>\n        <div className=\"d-flex justify-content-center\">\n            <Link to=\"/add-l\" type=\"button\" className=\"btn btn-secondary ml-2\"><Button>Add Location</Button></Link>\n        </div>\n        </>\n    )\n}\n\nexport default AllLocate;","/Users/mac/Documents/request/src/components/location/EditLocation.js",["197"],["198"],"import React, { useState, useEffect } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { getLocations, editLocations } from '../../service/api';\nimport {Link} from 'react-router-dom'\n\nconst initialValue = {\n    name: '',\n    rent: '',\n    email: '',\n    phone: '',\n    lon: '',\n    lat: '',\n    street_number: '',\n    street_name: '',\n    postal_code: '',\n    city: '',\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\n\n\nconst EditLocations = () => {\n    let navigate = useNavigate();\n    const classes = useStyles();\n    const { id } = useParams();\n    const [locate, setLocate] = useState(initialValue);\n\n\n    useEffect(() => {\n        loadEventDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const loadEventDetails = async() => {\n        const response = await getLocations(id);\n        setLocate(response.data);\n    }\n\n    console.log('AAAAAAA?????????', loadEventDetails)\n\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setLocate({...locate, [e.target.name]: e.target.value})\n    }\n\n    console.log('DDDDDDDDDD????????????', onValueChange)\n\n    const addEventDetails = async() => {\n        await editLocations(id, locate);\n        navigate.push('/all');\n    }\n    \n    return (\n        <Form>\n            <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <Label for=\"exampleSelect\">Select Location</Label>\n            <Input type=\"select\" id=\"exampleSelect\" placeholder=\"select location\" onChange={(e) => onValueChange(e)}>\n                <option></option>          \n            </Input>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"exampleEmail\">Name</Label>\n            <Input type=\"name\" name=\"name\" id=\"exampleEmail\" placeholder=\"event name\" onChange={(e) => onValueChange(e)}/>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"date\">Event Date</Label>\n            <Input type=\"date\"  id=\"exampleText\" placeholder=\"event date\" onChange={(e) => onValueChange(e)}/>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"description\">description</Label>\n            <Input type=\"textarea\" id=\"exampleText\" placeholder=\"event description\"  onChange={(e) => onValueChange(e)} />\n            </FormGroup>\n            <Button onClick={() => addEventDetails()}>Add Events</Button>\n            <Link to=\"/all-l\" className=\"btn btn-primary ml-2\"><Button>Cancel</Button></Link>\n        </Form>\n    );\n};\n\nexport default EditLocations;","/Users/mac/Documents/request/src/components/location/AddLocation.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],[],"/Users/mac/Documents/request-test/src/index.js",[],[],"/Users/mac/Documents/request-test/src/App.js",["214","215","216"],[],"import React from 'react'\nimport Navbar from './components/NavBar';\nimport AddEvents from './components/AddEvents';\nimport AllEvents from './components/AllEvents';\nimport EditEvents from './components/EditEvents';\nimport NotFound from './components/NotFound';\nimport CodeFound  from './components/CodeFound';\nimport AllCities from './components/cities/AllCities'\nimport EditCities from './components/cities/EditCities'\nimport AddCities from './components/cities/AddCities'\nimport AllLocations from './components/location/AllLocations'\nimport AddLocations from './components/location/AddLocation'\nimport EditLocation from './components/location/EditLocation'\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Cities from './components/cities/Cities';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Navbar />\n    <Routes>\n      {/* <Route path=\"/\" element={<CodeFound />} /> */}\n        <Route path=\"/all\" element={<AllEvents />} />\n        <Route path=\"/add\" element={<AddEvents />} />\n        <Route path=\"/edit/:id/\" element={<EditEvents />} />\n        <Route path=\"/add-ci\" element={<AddCities />} />\n        <Route path=\"/edit-ci/:id\" element={<EditCities />} />\n        <Route path=\"/all-ci\" element={<AllCities />} />\n        <Route path=\"/all-l\" element={<AllLocations />} />\n        <Route path=\"/add-l\" element={<AddLocations />} />\n        <Route path=\"/edit-l/:id\" element={<EditLocation />} />\n        {/* <Route  element={<NotFound />} /> */}\n    </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n\n",["217","218"],"/Users/mac/Documents/request-test/src/components/AddEvents.js",["219","220","221","222","223","224","225","226","227"],[],"/Users/mac/Documents/request-test/src/components/NavBar.js",["228"],[],"/Users/mac/Documents/request-test/src/components/EditEvents.js",["229","230","231","232","233","234","235","236"],["237"],"import React, { useState, useEffect } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { getEvents, editEvent } from '../service/api';\nimport {Link} from 'react-router-dom'\n\nconst initialValue = {\n    name: '',\n    description: '',\n    event_date: '',\n    location: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\n\n\nconst EditEvents = () => {\n    let navigate = useNavigate();\n    const classes = useStyles();\n    const { id } = useParams();\n    const [event, setEvents] = useState(initialValue);\n    const {name, description, event_date, select} = event;\n\n\n    useEffect(() => {\n        loadEventDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const loadEventDetails = async() => {\n        const response = await getEvents(`${id}/`);\n        setEvents(response.data);\n    }\n\n    console.log('AAAAAAA?????????', loadEventDetails)\n\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setEvents({...event, [e.target.name]: e.target.value})\n    }\n\n    console.log('DDDDDDDDDD????????????', onValueChange)\n\n    const addEventDetails = async() => {\n        await editEvent(id, event);\n        navigate.push('/all');\n    }\n    \n    return (\n        <div className=\"container p-5\">\n            <form className=\"form-group\">\n                <h1 style={{justifyContent: 'center', textAlign: 'center', fontWeight: 'bold', fontSize: 30}}>Edit Information</h1>\n                <div className=\"row jumbotron justify-content-center\">\n\n                    <div className=\"col-md-4 mb-3 mt-3\">\n                        <label  for=\"name\">Name</label>\n                        <input type=\"text\" value={name}  name=\"name\" placeholder=\"Name\" className=\"form-control\" onChange={(e) => onValueChange(e.target.value)}/>\n                    </div>\n\n                    <div className=\"col-md-4 mb-3 mt-3\">\n                        <label for=\"date\">Date</label>\n                        <input type=\"date\" value={event_date} name=\"date\" placeholder=\"2022-02-13\" className=\"form-control\" onChange={(e) => onValueChange(e.target.value)}/>\n                    </div>\n\n                    <div className=\"col-md-6 mb-3 mt-3\">\n                        <label for=\"comment\">Description</label>\n                        <textarea class=\"form-control\" rows=\"5\" id=\"comment\" type=\"text\" name=\"description\" value={description} placeholder=\"event description\" onChange={(e) => onValueChange(e.target.value)} style={{resize: 'none'}} ></textarea> \n                    </div>\n\n                    <div className=\"col-md-2 mb-3 mt-3\">\n                        <label for=\"sel1\" class=\"form-label\">Select location:</label>\n                        <select className=\"form-select\" id=\"sel2\" name=\"select\" placeholder=\"Select location\" >\n                            {/* {locations.map(item => {  \n                                return (\n                                <option key={item.id} value={item.id}>\n                                    {item.name}\n                                </option>)})} */}\n                        </select>\n                    </div>\n\n                    <br/>\n                    <div className=\"mb-3 mt-3\" style={{textAlign:'center', marginTop: -40}}>\n                        <Button onClick={() => addEventDetails()}>Edit Events</Button>\n                        <Link to=\"/all\" className=\"col-md-12\" style={{textAlign:'center',}}><Button className=\"btn btn-danger m-3\">Cancel</Button></Link>\n                    </div>\n                        \n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default EditEvents;","/Users/mac/Documents/request-test/src/components/CodeFound.js",[],[],"/Users/mac/Documents/request-test/src/components/NotFound.js",[],[],"/Users/mac/Documents/request-test/src/components/AllEvents.js",["238","239"],[],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { getEvents, deleteEvent } from '../service/api';\nimport { Link } from 'react-router-dom';\nimport { Card, Input } from 'semantic-ui-react'\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 50px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 15\n        }\n    }\n})\n\nfunction AllEvents() {\n    const [filteredResults, setFilteredResults] = useState([]);\n    const [searchInput, setSearchInput] = useState('');\n    const [events, setEvents] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllEvents();\n    }, []);\n\n    const searchItems = (searchValue) => {\n        setSearchInput(searchValue)\n        if (searchInput !== '') {\n            const filteredData = events.filter((item) => {\n                return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n            })\n            setFilteredResults(filteredData)\n        }\n        else{\n            setFilteredResults(events)\n        }\n    }\n\n\n    const getAllEvents = async () => {\n        let response = await getEvents();\n        setEvents(response.data);\n    }\n\n    const deleteEventData = async (id) => {\n        await deleteEvent(id);\n        getAllEvents();\n    }\n\n   \n\n\n    return (\n        <>\n        <div style={{ padding: 20 }}>\n            <Input icon='search'\n                placeholder='Search...'\n                onChange={(e) => searchItems(e.target.value)}\n            />\n        <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>Nº</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Created</TableCell>\n                    <TableCell>Status</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {searchInput.length > 1 ? (\n                    filteredResults.map((item) => {\n                        return(\n                            <TableRow className={classes.row} key={item.id}>\n                                <TableCell>{item.id}</TableCell>\n                                <TableCell>{item.name}</TableCell>\n                                <TableCell>{item.location}</TableCell>\n                                <TableCell>{item.item_date}</TableCell>\n                                <TableCell>{item.description}</TableCell>\n                                <TableCell>{item.created}</TableCell>\n                                <TableCell>{item.status}</TableCell>\n                                <TableCell>\n                                    <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} component={Link} to={`/edit/${item.id}`}>Edit</Button>\n                                </TableCell>\n                                <TableCell>\n                                    <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteEventData(item.id)}>Delete</Button> \n                                </TableCell>\n                            </TableRow>\n                        )\n                    })\n                ) : (\n                    events.map((item) => {\n                        return(\n                            <TableRow className={classes.row} key={item.id}>\n                                <TableCell>{item.id}</TableCell>\n                                <TableCell>{item.name}</TableCell>\n                                <TableCell>{item.location}</TableCell>\n                                <TableCell>{item.item_date}</TableCell>\n                                <TableCell>{item.description}</TableCell>\n                                <TableCell>{item.created}</TableCell>\n                                <TableCell>{item.status}</TableCell>\n                                <TableCell>\n                                    <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} component={Link} to={`/edit/${item.id}`}>Edit</Button>\n                                </TableCell>\n                                <TableCell>\n                                    <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteEventData(item.id)}>Delete</Button> \n                                </TableCell>\n                            </TableRow>\n                        )\n                    })\n                )}\n            </TableBody>\n        </Table>\n            <br/>\n            <div className=\"d-flex justify-content-center\">\n                <Link to=\"/add\" type=\"button\" className=\"btn btn-secondary ml-2\"><Button>Add Event</Button></Link>\n            </div>\n            </div>\n     </>\n    )\n}\n\nexport default AllEvents;","/Users/mac/Documents/request-test/src/components/cities/AllCities.js",["240","241"],[],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { getCities, deleteCities } from '../../service/api';\nimport { Card, Input } from 'semantic-ui-react'\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: '70%',\n        margin: '50px 0 0 50px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 15\n        }\n    }\n})\n\nfunction AllCities() {\n    const [filteredResults, setFilteredResults] = useState([]);\n    const [searchInput, setSearchInput] = useState('');\n    const [cities, setCities] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllCities();\n    }, []);\n\n\n    const searchItems = (searchValue) => {\n        setSearchInput(searchValue)\n        if (searchInput !== '') {\n            const filteredData = cities.filter((item) => {\n                return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n            })\n            setFilteredResults(filteredData)\n        }\n        else{\n            setFilteredResults(cities)\n        }\n    }\n    const getAllCities = async () => {\n        let response = await getCities();\n        setCities(response.data);\n    }\n\n    const deleteCitiesData = async (id) => {\n        await deleteCities(id);\n        getAllCities();\n    }\n\n    return (\n        <>\n        <div style={{ padding: 20 }}>\n            <Input icon='search'\n                placeholder='Search...'\n                onChange={(e) => searchItems(e.target.value)}\n            />\n        <Table className={classes.table}>\n                <TableHead>\n                    <TableRow className={classes.thead}>\n                        <TableCell>Nº</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Created</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                {searchInput.length > 1 ? (\n                    filteredResults.map((item) => {\n                        return(\n                            <TableRow className={classes.row} key={item.id}>\n                                <TableCell>{item.id}</TableCell>\n                                <TableCell>{item.name}</TableCell>\n                                <TableCell>{item.time_added}</TableCell>\n                                <TableCell>\n                                    <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} component={Link} to={`/edit-ci/${item.id}`}>Edit</Button>\n                                </TableCell>\n                                <TableCell>\n                                    <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteCitiesData(item.id)}>Delete</Button> \n                                </TableCell>\n                            </TableRow>\n                        )\n                    })\n                        \n                ) : (\n                    cities.map((item) => {\n                        return (\n                            <TableRow className={classes.row} key={item.id}>\n                            <TableCell>{item.id}</TableCell>\n                            <TableCell>{item.name}</TableCell>\n                            <TableCell>{item.time_added}</TableCell>\n                            <TableCell>\n                                <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} component={Link} to={`/edit-ci/${item.id}`}>Edit</Button>\n                            </TableCell>\n                            <TableCell>\n                                <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteCitiesData(item.id)}>Delete</Button> \n                            </TableCell>\n                        </TableRow>\n                    )\n                    })\n                )}\n                    \n                </TableBody>\n            </Table>\n            <br/>\n            <div className=\"d-flex justify-content-center\">\n                <Link to=\"/add-ci\" type=\"button\" className=\"btn btn-secondary ml-2\"><Button>Add Cities</Button></Link>\n            </div>\n            </div>\n        </>\n    )\n}\n\nexport default AllCities;","/Users/mac/Documents/request-test/src/components/cities/EditCities.js",[],["242","243"],"/Users/mac/Documents/request-test/src/components/cities/AddCities.js",["244","245","246","247","248","249"],[],"/Users/mac/Documents/request-test/src/components/cities/Cities.js",[],[],"/Users/mac/Documents/request-test/src/components/location/AddLocation.js",["250","251","252","253","254","255","256","257"],[],"import react, { useState } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport { addLocations } from '../../service/api';\nimport {Link} from 'react-router-dom';\n\nconst initialValue = {\n    name: '',\n    rent: '',\n    email: '',\n    phone: '',\n    coordinates: '',\n    street_number: '',\n    street_name: '',\n    postal_code: '',\n    status: '',\n    select: '',\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst AddLocations = () => {\n    const [locate, setLocate] = useState(initialValue);\n    const { \n        name, \n        rent, \n        email, \n        phone, \n        coordinates, \n        street_number, \n        street_name, \n        postal_code, \n        status, \n        select  \n    } = locate;\n    const classes = useStyles();\n    let navigate = useNavigate();\n\n    const onValueChange = (e) => {\n        setLocate({...locate, [e.target.name]: e.target.value})\n    }\n\n    const AddLocationsDetails = async() => {\n        await addLocations(locate);\n        navigate(\"/all-l\", { replace: true });;\n    }\n\n    return (\n        <div className=\"container p-5\">\n                <form className=\"form-control\">\n                    <h1 style={{justifyContent: 'center', textAlign: 'center', fontWeight: 'bold', fontSize: 30}}>New Location</h1>\n                    <div className=\"row jumbotron justify-content-center\">\n                        <div className=\"col-md-6 mb-3 mt-3 \">\n                            <label  htmlFor=\"name\"> Name</label>\n                            <input type=\"text\" value={name} name=\"name\" placeholder=\"name\" className=\"form-control\" onChange={(e) => onValueChange(e)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  htmlFor=\"rent\">Rent</label>\n                            <input type=\"text\" value={rent}  name=\"rent\" placeholder=\"Rent\" className=\"form-control\" onChange={(e) => onValueChange(e)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  htmlFor=\"email\">Email</label>\n                            <input type=\"email\" value={email} name=\"email\" placeholder=\"johndoe@joecorp.de\" className=\"form-control\" onChange={(e) => onValueChange(e)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  htmlFor=\"phone\">Phone</label>\n                            <input type=\"tel\" value={phone} name=\"phone\" placeholder=\"+49 (012) 308\" className=\"form-control\" onChange={(e) => onValueChange(e)} />\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  htmlFor=\"coordinates\"><span> Coordinates</span>\n                            </label>\n                            <input type=\"text\" className=\"form-control\" name=\"coordinates\" value={coordinates} placeholder=\"49.045,10.442\" onChange={(e) => onValueChange(e)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  htmlFor=\"street\"><span > Street Number</span>\n                            </label>\n                            <input type=\"number\" className=\"form-control\"  name=\"street_number\" value={street_number}  placeholder=\"Street Number\" onChange={(e) => onValueChange(e)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  htmlFor=\"street\"><span > Street Name</span>\n                            </label>\n                            <input type=\"name\" className=\"form-control\"  name=\"street_name\" value={street_name} placeholder=\"street name\" onChange={(e) => onValueChange(e)}/>\n                        </div>\n\n                        <div className=\"col-md-2 mb-3 mt-3\">\n                            <label  htmlFor=\"postal_code\"><span > Code Postal</span>\n                            </label>\n                            <input type=\"text\" className=\"form-control\" name=\"postal_code\" value={postal_code} placeholder=\"code postal\" onChange={(e) => onValueChange(e)}/>\n                        </div>\n\n                        <div className=\"col-md-4 mb-3 mt-3\">\n                            <label  htmlFor=\"status\"><span > Status</span>\n                            </label>\n                            <input type=\"text\" className=\"form-control\" name=\"status\" value={status} placeholder=\"status\" onChange={(e) => onValueChange(e)}/>\n                        </div>\n\n                        {/* <div class=\"col-md-4 shadow-sm p-3 mb-5 bg-body rounded\">\n                            <label for=\"sel1\" class=\"form-label\">Select city:</label>\n                            <select class=\"form-select\" id=\"sel1\"  placeholder=\"Select City\" onChange={selectChoice}>\n                            {locate.map(item => {  \n                                    return (\n                                    <option key={item.id} value={item.id}>\n                                        {item.name}\n                                    </option>\n                                    );\n                                    })} \n                            </select>\n                        </div> */}\n\n                        <div className=\"col-md-12 mb-3 mt-3\" style={{textAlign:'center',}}>\n                            <Button type=\"button\" class=\"btn btn-secondary\" onClick={() => AddLocationsDetails()}>Add Locations</Button>\n                            <Link to=\"/all-l\" className=\"col-md-12\" style={{textAlign:'center',}}><Button type=\"button\" class=\"btn btn-danger m-3\">Cancel</Button></Link>\n                        </div>\n                        \n                    </div>\n\n                </form>\n            </div>\n    )\n\n}\n\nexport default AddLocations;","/Users/mac/Documents/request-test/src/components/location/AllLocations.js",["258","259"],[],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { getLocations, deleteLocations } from '../../service/api';\nimport { Card, Input } from 'semantic-ui-react'\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: '50%',\n        margin: '30px 10px 10px 30px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 15\n        }\n    }\n})\n\nfunction AllLocate() {\n    const [filteredResults, setFilteredResults] = useState([]);\n    const [searchInput, setSearchInput] = useState('');\n    const [locate, setLocate] = useState([]);\n    const classes = useStyles();\n\n\n    useEffect(() => {\n        getAllLocations();\n    }, []);\n\n    const searchItems = (searchValue) => {\n        setSearchInput(searchValue)\n        if (searchInput !== '') {\n            const filteredData = locate.filter((item) => {\n                return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n            })\n            setFilteredResults(filteredData)\n        }\n        else{\n            setFilteredResults(locate)\n        }\n    }\n\n    const getAllLocations = async () => {\n        let response = await getLocations();\n        setLocate(response.data);\n    }\n\n    const deleteLocateData = async (id) => {\n        await deleteLocations(id);\n        getAllLocations();\n    }\n\n    return (\n        <>\n        <div style={{ padding: 20 }}>\n            <Input icon='search'\n                placeholder='Search...'\n                onChange={(e) => searchItems(e.target.value)}\n            />\n        \n        <Table className={classes.table}>\n                <TableHead>\n                    <TableRow className={classes.thead}>\n                        <TableCell>Nº</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Rent</TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Phone</TableCell>\n                        <TableCell>Contact Person</TableCell>\n                        <TableCell>Coordinates</TableCell>\n                        <TableCell>Street Number</TableCell>\n                        <TableCell>Street Name</TableCell>\n                        <TableCell>Code Postal</TableCell>\n                        <TableCell>Status</TableCell>\n                        <TableCell>Date Created</TableCell>\n                        <TableCell>Date Created</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {searchInput.length > 1 ? (\n                        filteredResults.map((item) => {\n                            return(\n                                <TableRow className={classes.row} key={item.id}>\n                                    <TableCell>{item.id}</TableCell>\n                                    <TableCell>{item.name}</TableCell>\n                                    <TableCell>{item.rent}</TableCell>\n                                    <TableCell>{item.email}</TableCell>\n                                    <TableCell>{item.phone}</TableCell>\n                                    <TableCell>{item.contact_person}</TableCell>\n                                    <TableCell>{item.lon}</TableCell>\n                                    <TableCell>{item.lat}</TableCell>\n                                    <TableCell>{item.street_number}</TableCell>\n                                    <TableCell>{item.street_name}</TableCell>\n                                    <TableCell>{item.postal_code}</TableCell>\n                                    <TableCell>{item.status}</TableCell>\n                                    <TableCell>{item.time_added}</TableCell>\n                                    <TableCell>\n                                        <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} component={Link} to={`/edit-l/${item.id}`}>Edit</Button>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteLocateData(item.id)}>Delete</Button> \n                                    </TableCell>\n                                </TableRow>\n                        )}\n                        )): (\n                            locate.map((item) => {\n                                return(\n                                    <TableRow className={classes.row} key={item.id}>\n                                        <TableCell>{item.id}</TableCell>\n                                        <TableCell>{item.name}</TableCell>\n                                        <TableCell>{item.rent}</TableCell>\n                                        <TableCell>{item.email}</TableCell>\n                                        <TableCell>{item.phone}</TableCell>\n                                        <TableCell>{item.contact_person}</TableCell>\n                                        <TableCell>{item.lon}</TableCell>\n                                        <TableCell>{item.lat}</TableCell>\n                                        <TableCell>{item.street_number}</TableCell>\n                                        <TableCell>{item.street_name}</TableCell>\n                                        <TableCell>{item.postal_code}</TableCell>\n                                        <TableCell>{item.status}</TableCell>\n                                        <TableCell>{item.time_added}</TableCell>\n                                        <TableCell>\n                                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} component={Link} to={`/edit-l/${item.id}`}>Edit</Button>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteLocateData(item.id)}>Delete</Button> \n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            })\n                        )}\n                    </TableBody>\n                </Table>\n                <br/>\n                <div className=\"d-flex justify-content-center\">\n                    <Link to=\"/add-l\" type=\"button\" className=\"btn btn-secondary ml-2\"><Button>Add Location</Button></Link>\n                </div>\n                </div>\n            </>\n        )\n    }\n\nexport default AllLocate;","/Users/mac/Documents/request-test/src/components/location/EditLocation.js",["260","261","262","263","264","265","266"],["267"],"import React, { useState, useEffect } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { getLocations, editLocations } from '../../service/api';\nimport {Link} from 'react-router-dom'\n\nconst initialValue = {\n    name: '',\n    rent: '',\n    email: '',\n    phone: '',\n    lon: '',\n    lat: '',\n    street_number: '',\n    street_name: '',\n    postal_code: '',\n    city: '',\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\n\n\nconst EditLocation = () => {\n    let navigate = useNavigate();\n    const classes = useStyles();\n    const { id } = useParams();\n    const [locate, setLocate] = useState(initialValue);\n    const { \n        name, \n        rent, \n        email, \n        phone, \n        coordinates, \n        street_number, \n        street_name, \n        postal_code, \n        status,\n    } = locate;\n\n\n    useEffect(() => {\n        loadLocateDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const loadLocateDetails = async() => {\n        const response = await getLocations(`${id}/`);\n        setLocate(response.data);\n    }\n\n    console.log('AAAAAAA?????????', loadLocateDetails)\n\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setLocate({...locate, [e.target.name]: e.target.value})\n    }\n\n    console.log('DDDDOOOO?????', loadLocateDetails)\n\n    const AddLocationsDetails = async() => {\n        await editLocations(locate);\n        navigate.push('/all');\n    }\n    \n    return (\n        <div className=\"container p-5\">\n                <form className=\"form-control\">\n                    <h1 style={{justifyContent: 'center', textAlign: 'center', fontWeight: 'bold', fontSize: 30}}>Create New Location</h1>\n                    <div className=\"row jumbotron justify-content-center\">\n                        <div className=\"col-md-6 mb-3 mt-3 \">\n                            <label  for=\"name\">Name</label>\n                            <input type=\"text\" value={name}  placeholder=\"Name\" className=\"form-control\" onChange={(e) => onValueChange(e.target.value)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  for=\"rent\">Rent</label>\n                            <input type=\"text\" value={rent}  placeholder=\"Rent\" className=\"form-control\" onChange={(e) => onValueChange(e.target.value)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  for=\"email\">Email</label>\n                            <input type=\"email\" value={email}  placeholder=\"johndoe@joecorp.de\" className=\"form-control\" onChange={(e) => onValueChange(e.target.value)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  for=\"phone\">Phone</label>\n                            <input type=\"tel\" value={phone} placeholder=\"+49 (012) 308\" className=\"form-control\" onChange={(e) => onValueChange(e.target.value)} />\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  for=\"coord\"><span> Coordinates</span>\n                            </label>\n                            <input type=\"text\" className=\"form-control\" value={coordinates} placeholder=\"49.045,10.442\" onChange={(e) => onValueChange(e.target.value)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  for=\"street\"><span > Street Number</span>\n                            </label>\n                            <input type=\"text\" className=\"form-control\" value={street_number}  placeholder=\"Street Number\" onChange={(e) => onValueChange(e.target.value)}/>\n                        </div>\n\n                        <div className=\"col-md-6 mb-3 mt-3\">\n                            <label  for=\"street\"><span > Street Name</span>\n                            </label>\n                            <input type=\"text\" className=\"form-control\" value={street_name} placeholder=\"street name\" onChange={(e) => onValueChange(e.target.value)}/>\n                        </div>\n\n                        <div className=\"col-md-2 mb-3 mt-3\">\n                            <label  for=\"code\"><span > Code Postal</span>\n                            </label>\n                            <input type=\"text\" className=\"form-control\" value={postal_code} placeholder=\"code postal\" onChange={(e) => onValueChange(e.target.value)}/>\n                        </div>\n\n                        <div className=\"col-md-4 mb-3 mt-3\">\n                            <label  for=\"status\"><span > Status</span>\n                            </label>\n                            <input type=\"text\" className=\"form-control\" value={status} placeholder=\"status\" onChange={(e) => onValueChange(e.target.value)}/>\n                        </div>\n\n                        {/* <div class=\"col-md-4 shadow-sm p-3 mb-5 bg-body rounded\">\n                            <label for=\"sel1\" class=\"form-label\">Select city:</label>\n                            <select class=\"form-select\" id=\"sel1\"  placeholder=\"Select City\" onChange={selectChoice}>\n                            {locate.map(item => {  \n                                    return (\n                                    <option key={item.id} value={item.id}>\n                                        {item.name}\n                                    </option>\n                                    );\n                                    })} \n                            </select>\n                        </div> */}\n\n                        <div className=\"col-md-12 mb-3 mt-3\" style={{textAlign:'center',}}>\n                            <Button onClick={() => AddLocationsDetails()}>Edit Locations</Button>\n                            <Link to=\"/all-l\" className=\"col-md-12\" style={{textAlign:'center',}}><Button className=\"btn btn-danger m-3\">Cancel</Button></Link>\n                        </div>\n                        \n                    </div>\n\n                </form>\n            </div>\n    );\n};\n\nexport default EditLocation;","/Users/mac/Documents/request-test/src/service/api.js",[],[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":6,"column":8,"nodeType":"274","messageId":"275","endLine":6,"endColumn":16},{"ruleId":"272","severity":1,"message":"276","line":7,"column":8,"nodeType":"274","messageId":"275","endLine":7,"endColumn":17},{"ruleId":"272","severity":1,"message":"277","line":19,"column":8,"nodeType":"274","messageId":"275","endLine":19,"endColumn":14},{"ruleId":"272","severity":1,"message":"278","line":3,"column":18,"nodeType":"274","messageId":"275","endLine":3,"endColumn":22},{"ruleId":"272","severity":1,"message":"279","line":2,"column":39,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"272","severity":1,"message":"280","line":3,"column":49,"nodeType":"274","messageId":"275","endLine":3,"endColumn":57},{"ruleId":"281","severity":1,"message":"282","line":37,"column":8,"nodeType":"283","endLine":37,"endColumn":10,"suggestions":"284","suppressions":"285"},{"ruleId":"272","severity":1,"message":"280","line":4,"column":49,"nodeType":"274","messageId":"275","endLine":4,"endColumn":57},{"ruleId":"272","severity":1,"message":"286","line":33,"column":11,"nodeType":"274","messageId":"275","endLine":33,"endColumn":24},{"ruleId":"272","severity":1,"message":"279","line":2,"column":39,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"281","severity":1,"message":"287","line":32,"column":8,"nodeType":"283","endLine":32,"endColumn":10,"suggestions":"288","suppressions":"289"},{"ruleId":"272","severity":1,"message":"290","line":41,"column":15,"nodeType":"274","messageId":"275","endLine":41,"endColumn":23,"suppressions":"291"},{"ruleId":"272","severity":1,"message":"292","line":1,"column":8,"nodeType":"274","messageId":"275","endLine":1,"endColumn":13},{"ruleId":"272","severity":1,"message":"293","line":23,"column":13,"nodeType":"274","messageId":"275","endLine":23,"endColumn":17},{"ruleId":"272","severity":1,"message":"294","line":23,"column":19,"nodeType":"274","messageId":"275","endLine":23,"endColumn":23},{"ruleId":"272","severity":1,"message":"279","line":2,"column":39,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"272","severity":1,"message":"280","line":3,"column":49,"nodeType":"274","messageId":"275","endLine":3,"endColumn":57},{"ruleId":"281","severity":1,"message":"282","line":43,"column":8,"nodeType":"283","endLine":43,"endColumn":10,"suggestions":"295","suppressions":"296"},{"ruleId":"272","severity":1,"message":"292","line":1,"column":8,"nodeType":"274","messageId":"275","endLine":1,"endColumn":13},{"ruleId":"297","severity":1,"message":"298","line":10,"column":5,"nodeType":"299","messageId":"300","endLine":10,"endColumn":9},{"ruleId":"297","severity":1,"message":"301","line":11,"column":5,"nodeType":"299","messageId":"300","endLine":11,"endColumn":9},{"ruleId":"297","severity":1,"message":"298","line":12,"column":5,"nodeType":"299","messageId":"300","endLine":12,"endColumn":9},{"ruleId":"297","severity":1,"message":"301","line":13,"column":5,"nodeType":"299","messageId":"300","endLine":13,"endColumn":9},{"ruleId":"297","severity":1,"message":"298","line":14,"column":5,"nodeType":"299","messageId":"300","endLine":14,"endColumn":9},{"ruleId":"297","severity":1,"message":"301","line":15,"column":5,"nodeType":"299","messageId":"300","endLine":15,"endColumn":9},{"ruleId":"297","severity":1,"message":"298","line":16,"column":5,"nodeType":"299","messageId":"300","endLine":16,"endColumn":9},{"ruleId":"297","severity":1,"message":"301","line":17,"column":5,"nodeType":"299","messageId":"300","endLine":17,"endColumn":9},{"ruleId":"297","severity":1,"message":"298","line":18,"column":5,"nodeType":"299","messageId":"300","endLine":18,"endColumn":9},{"ruleId":"297","severity":1,"message":"301","line":19,"column":5,"nodeType":"299","messageId":"300","endLine":19,"endColumn":9},{"ruleId":"297","severity":1,"message":"298","line":20,"column":5,"nodeType":"299","messageId":"300","endLine":20,"endColumn":9},{"ruleId":"297","severity":1,"message":"301","line":21,"column":5,"nodeType":"299","messageId":"300","endLine":21,"endColumn":9},{"ruleId":"272","severity":1,"message":"293","line":36,"column":13,"nodeType":"274","messageId":"275","endLine":36,"endColumn":17},{"ruleId":"272","severity":1,"message":"294","line":36,"column":19,"nodeType":"274","messageId":"275","endLine":36,"endColumn":23},{"ruleId":"272","severity":1,"message":"273","line":6,"column":8,"nodeType":"274","messageId":"275","endLine":6,"endColumn":16},{"ruleId":"272","severity":1,"message":"276","line":7,"column":8,"nodeType":"274","messageId":"275","endLine":7,"endColumn":17},{"ruleId":"272","severity":1,"message":"277","line":19,"column":8,"nodeType":"274","messageId":"275","endLine":19,"endColumn":14},{"ruleId":"268","replacedBy":"302"},{"ruleId":"270","replacedBy":"303"},{"ruleId":"272","severity":1,"message":"304","line":4,"column":18,"nodeType":"274","messageId":"275","endLine":4,"endColumn":22},{"ruleId":"272","severity":1,"message":"305","line":4,"column":24,"nodeType":"274","messageId":"275","endLine":4,"endColumn":33},{"ruleId":"272","severity":1,"message":"306","line":4,"column":35,"nodeType":"274","messageId":"275","endLine":4,"endColumn":40},{"ruleId":"272","severity":1,"message":"307","line":4,"column":42,"nodeType":"274","messageId":"275","endLine":4,"endColumn":47},{"ruleId":"272","severity":1,"message":"280","line":4,"column":49,"nodeType":"274","messageId":"275","endLine":4,"endColumn":57},{"ruleId":"272","severity":1,"message":"308","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":20},{"ruleId":"272","severity":1,"message":"309","line":6,"column":8,"nodeType":"274","messageId":"275","endLine":6,"endColumn":14},{"ruleId":"272","severity":1,"message":"310","line":35,"column":11,"nodeType":"274","messageId":"275","endLine":35,"endColumn":18},{"ruleId":"272","severity":1,"message":"311","line":44,"column":44,"nodeType":"274","messageId":"275","endLine":44,"endColumn":52},{"ruleId":"272","severity":1,"message":"278","line":3,"column":18,"nodeType":"274","messageId":"275","endLine":3,"endColumn":22},{"ruleId":"272","severity":1,"message":"304","line":3,"column":18,"nodeType":"274","messageId":"275","endLine":3,"endColumn":22},{"ruleId":"272","severity":1,"message":"305","line":3,"column":24,"nodeType":"274","messageId":"275","endLine":3,"endColumn":33},{"ruleId":"272","severity":1,"message":"306","line":3,"column":35,"nodeType":"274","messageId":"275","endLine":3,"endColumn":40},{"ruleId":"272","severity":1,"message":"307","line":3,"column":42,"nodeType":"274","messageId":"275","endLine":3,"endColumn":47},{"ruleId":"272","severity":1,"message":"280","line":3,"column":49,"nodeType":"274","messageId":"275","endLine":3,"endColumn":57},{"ruleId":"272","severity":1,"message":"308","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":29,"column":11,"nodeType":"274","messageId":"275","endLine":29,"endColumn":18},{"ruleId":"272","severity":1,"message":"312","line":32,"column":43,"nodeType":"274","messageId":"275","endLine":32,"endColumn":49},{"ruleId":"281","severity":1,"message":"282","line":38,"column":8,"nodeType":"283","endLine":38,"endColumn":10,"suggestions":"313","suppressions":"314"},{"ruleId":"272","severity":1,"message":"279","line":2,"column":39,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"272","severity":1,"message":"315","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":14},{"ruleId":"272","severity":1,"message":"279","line":2,"column":39,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"272","severity":1,"message":"315","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":14},{"ruleId":"281","severity":1,"message":"287","line":32,"column":8,"nodeType":"283","endLine":32,"endColumn":10,"suggestions":"316","suppressions":"317"},{"ruleId":"272","severity":1,"message":"290","line":41,"column":15,"nodeType":"274","messageId":"275","endLine":41,"endColumn":23,"suppressions":"318"},{"ruleId":"272","severity":1,"message":"305","line":2,"column":10,"nodeType":"274","messageId":"275","endLine":2,"endColumn":19},{"ruleId":"272","severity":1,"message":"319","line":2,"column":21,"nodeType":"274","messageId":"275","endLine":2,"endColumn":32},{"ruleId":"272","severity":1,"message":"320","line":2,"column":34,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"272","severity":1,"message":"307","line":2,"column":46,"nodeType":"274","messageId":"275","endLine":2,"endColumn":51},{"ruleId":"272","severity":1,"message":"308","line":2,"column":73,"nodeType":"274","messageId":"275","endLine":2,"endColumn":83},{"ruleId":"272","severity":1,"message":"310","line":24,"column":11,"nodeType":"274","messageId":"275","endLine":24,"endColumn":18},{"ruleId":"272","severity":1,"message":"292","line":1,"column":8,"nodeType":"274","messageId":"275","endLine":1,"endColumn":13},{"ruleId":"272","severity":1,"message":"305","line":2,"column":10,"nodeType":"274","messageId":"275","endLine":2,"endColumn":19},{"ruleId":"272","severity":1,"message":"319","line":2,"column":21,"nodeType":"274","messageId":"275","endLine":2,"endColumn":32},{"ruleId":"272","severity":1,"message":"320","line":2,"column":34,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"272","severity":1,"message":"307","line":2,"column":46,"nodeType":"274","messageId":"275","endLine":2,"endColumn":51},{"ruleId":"272","severity":1,"message":"308","line":2,"column":73,"nodeType":"274","messageId":"275","endLine":2,"endColumn":83},{"ruleId":"272","severity":1,"message":"312","line":42,"column":9,"nodeType":"274","messageId":"275","endLine":42,"endColumn":15},{"ruleId":"272","severity":1,"message":"310","line":44,"column":11,"nodeType":"274","messageId":"275","endLine":44,"endColumn":18},{"ruleId":"272","severity":1,"message":"279","line":2,"column":39,"nodeType":"274","messageId":"275","endLine":2,"endColumn":44},{"ruleId":"272","severity":1,"message":"315","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":14},{"ruleId":"272","severity":1,"message":"304","line":3,"column":18,"nodeType":"274","messageId":"275","endLine":3,"endColumn":22},{"ruleId":"272","severity":1,"message":"305","line":3,"column":24,"nodeType":"274","messageId":"275","endLine":3,"endColumn":33},{"ruleId":"272","severity":1,"message":"306","line":3,"column":35,"nodeType":"274","messageId":"275","endLine":3,"endColumn":40},{"ruleId":"272","severity":1,"message":"307","line":3,"column":42,"nodeType":"274","messageId":"275","endLine":3,"endColumn":47},{"ruleId":"272","severity":1,"message":"280","line":3,"column":49,"nodeType":"274","messageId":"275","endLine":3,"endColumn":57},{"ruleId":"272","severity":1,"message":"308","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":35,"column":11,"nodeType":"274","messageId":"275","endLine":35,"endColumn":18},{"ruleId":"281","severity":1,"message":"321","line":54,"column":8,"nodeType":"283","endLine":54,"endColumn":10,"suggestions":"322","suppressions":"323"},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'CodeFound' is defined but never used.","'Cities' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","'FormText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadEventDetails'. Either include it or remove the dependency array.","ArrayExpression",["326"],["327"],"'onValueChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadUserDetails'. Either include it or remove the dependency array.",["328"],["329"],"'response' is assigned a value but never used.",["330"],"'react' is defined but never used.","'name' is assigned a value but never used.","'code' is assigned a value but never used.",["331"],["332"],"no-dupe-keys","Duplicate key 'name'.","ObjectExpression","unexpected","Duplicate key 'code'.",["324"],["325"],"'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'Typography' is defined but never used.","'moment' is defined but never used.","'classes' is assigned a value but never used.","'location' is assigned a value but never used.","'select' is assigned a value but never used.",["333"],["334"],"'Card' is defined but never used.",["335"],["336"],["337"],"'FormControl' is defined but never used.","'InputLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'loadLocateDetails'. Either include it or remove the dependency array.",["338"],["339"],"no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"kind":"342","justification":"343"},{"desc":"344","fix":"345"},{"kind":"342","justification":"343"},{"kind":"342","justification":"343"},{"desc":"340","fix":"346"},{"kind":"342","justification":"343"},{"desc":"340","fix":"347"},{"kind":"342","justification":"343"},{"desc":"344","fix":"348"},{"kind":"342","justification":"343"},{"kind":"342","justification":"343"},{"desc":"349","fix":"350"},{"kind":"342","justification":"343"},"Update the dependencies array to be: [loadEventDetails]",{"range":"351","text":"352"},"directive","","Update the dependencies array to be: [loadUserDetails]",{"range":"353","text":"354"},{"range":"355","text":"352"},{"range":"356","text":"352"},{"range":"357","text":"354"},"Update the dependencies array to be: [loadLocateDetails]",{"range":"358","text":"359"},[905,907],"[loadEventDetails]",[868,870],"[loadUserDetails]",[1010,1012],[964,966],[868,870],[1207,1209],"[loadLocateDetails]"]