[{"/Users/mac/Documents/request/src/index.js":"1","/Users/mac/Documents/request/src/App.js":"2","/Users/mac/Documents/request/src/components/NavBar.js":"3","/Users/mac/Documents/request/src/components/AllEvents.js":"4","/Users/mac/Documents/request/src/components/EditEvents.js":"5","/Users/mac/Documents/request/src/components/NotFound.js":"6","/Users/mac/Documents/request/src/components/CodeFound.js":"7","/Users/mac/Documents/request/src/components/AddEvents.js":"8","/Users/mac/Documents/request/src/service/api.js":"9","/Users/mac/Documents/request/src/components/cities/AllCities.js":"10","/Users/mac/Documents/request/src/components/cities/EditCities.js":"11","/Users/mac/Documents/request/src/components/cities/AddCities.js":"12","/Users/mac/Documents/request/src/components/cities/Cities.js":"13","/Users/mac/Documents/request/src/components/location/AllLocations.js":"14","/Users/mac/Documents/request/src/components/location/EditLocation.js":"15","/Users/mac/Documents/request/src/components/location/AddLocation.js":"16"},{"size":196,"mtime":1647439010708,"results":"17","hashOfConfig":"18"},{"size":1556,"mtime":1647501498349,"results":"19","hashOfConfig":"18"},{"size":1275,"mtime":1647501573719,"results":"20","hashOfConfig":"18"},{"size":2863,"mtime":1647502361505,"results":"21","hashOfConfig":"18"},{"size":2715,"mtime":1647497804836,"results":"22","hashOfConfig":"18"},{"size":0,"mtime":1647440671531,"results":"23","hashOfConfig":"18"},{"size":0,"mtime":1647441098747,"results":"24","hashOfConfig":"18"},{"size":2131,"mtime":1647497778327,"results":"25","hashOfConfig":"18"},{"size":1523,"mtime":1647499093901,"results":"26","hashOfConfig":"18"},{"size":2420,"mtime":1647502349145,"results":"27","hashOfConfig":"18"},{"size":2301,"mtime":1647497623765,"results":"28","hashOfConfig":"18"},{"size":1644,"mtime":1647466259807,"results":"29","hashOfConfig":"18"},{"size":152,"mtime":1647454801409,"results":"30","hashOfConfig":"18"},{"size":3628,"mtime":1647502339809,"results":"31","hashOfConfig":"18"},{"size":2834,"mtime":1647501178628,"results":"32","hashOfConfig":"18"},{"size":1968,"mtime":1647502465886,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1kgvma7",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"37"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"37"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Documents/request/src/index.js",[],[],["90","91"],"/Users/mac/Documents/request/src/App.js",["92","93","94"],[],"/Users/mac/Documents/request/src/components/NavBar.js",["95"],[],"import React from 'react';\nimport { AppBar, Toolbar, makeStyles } from '@material-ui/core';\nimport {NavLink, Link} from 'react-router-dom'\n\n\nconst useStyle = makeStyles({\n    header: {\n        background: '#111111'\n    },\n    tabs: {\n        color: '#FFFFFF',\n        marginRight: 20,\n        textDecoration: 'none',\n        fontSize: 20\n    }\n})\n\nconst NavBar = () => {\n    const classes = useStyle();\n    return (\n        <AppBar position=\"static\" className={classes.header}>\n            <Toolbar>\n                <NavLink className={classes.tabs} to=\"./\" >Api Test Request</NavLink>\n                <NavLink className={classes.tabs} to=\"all\" >All Events</NavLink>\n                {/* <NavLink className={classes.tabs} to=\"add\" >Add Events</NavLink> */}\n                <NavLink className={classes.tabs} to=\"all-ci\" >All Cities</NavLink>\n                {/* <NavLink className={classes.tabs} to=\"add-ci\" >Add Cities</NavLink> */}\n                <NavLink className={classes.tabs} to=\"all-l\" >All Locations</NavLink>\n                {/* <NavLink className={classes.tabs} to=\"add-l\" >Add Locations</NavLink> */}\n                {/* <NavLink className={classes.tabs} to=\"add\" >Add Events</NavLink> */}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NavBar;","/Users/mac/Documents/request/src/components/AllEvents.js",["96"],[],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { getEvents, deleteEvent } from '../service/api';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 50px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 15\n        }\n    }\n})\n\nfunction AllEvents() {\n    const [events, setEvents] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllEvents();\n    }, []);\n\n\n    const getAllEvents = async () => {\n        let response = await getEvents();\n        setEvents(response.data);\n    }\n\n    const deleteEventData = async (id) => {\n        await deleteEvent(id);\n        getAllEvents();\n    }\n\n   \n\n\n    return (\n        <>\n      <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>NÂº</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Created</TableCell>\n                    <TableCell>Status</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {events.map((event) => (\n                    <TableRow className={classes.row} key={event.id}>\n                        <TableCell>{event.id}</TableCell>\n                        <TableCell>{event.name}</TableCell>\n                        <TableCell>{event.location}</TableCell>\n                        <TableCell>{event.event_date}</TableCell>\n                        <TableCell>{event.description}</TableCell>\n                        <TableCell>{event.created}</TableCell>\n                        <TableCell>{event.status}</TableCell>\n                        <TableCell>\n                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} component={Link} to={`/edit/${event.id}`}>Edit</Button>\n                        </TableCell>\n                        <TableCell>\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteEventData(event.id)}>Delete</Button> \n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n        <br/>\n        <div className=\"d-flex justify-content-center\">\n         <Link to=\"/add-l\" type=\"button\" className=\"btn btn-secondary ml-2\"><Button>Add Event</Button></Link>\n        </div>\n     </>\n    )\n}\n\nexport default AllEvents;","/Users/mac/Documents/request/src/components/EditEvents.js",["97"],["98"],"import React, { useState, useEffect } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { getEvents, editEvent } from '../service/api';\nimport {Link} from 'react-router-dom'\n\nconst initialValue = {\n    name: '',\n    description: '',\n    event_date: '',\n    location: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\n\n\nconst EditEvents = () => {\n    let navigate = useNavigate();\n    const classes = useStyles();\n    const { id } = useParams();\n    const [event, setEvents] = useState(initialValue);\n\n\n    useEffect(() => {\n        loadEventDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const loadEventDetails = async() => {\n        const response = await getEvents(id);\n        setEvents(response.data);\n    }\n\n    console.log('AAAAAAA?????????', loadEventDetails)\n\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setEvents({...event, [e.target.name]: e.target.value})\n    }\n\n    console.log('DDDDDDDDDD????????????', onValueChange)\n\n    const addEventDetails = async() => {\n        await editEvent(id, event);\n        navigate.push('/all');\n    }\n    \n    return (\n        <Form>\n            <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <Label for=\"exampleSelect\">Select Location</Label>\n            <Input type=\"select\" id=\"exampleSelect\" placeholder=\"select location\" onChange={(e) => onValueChange(e)}>\n                <option></option>          \n            </Input>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"exampleEmail\">Name</Label>\n            <Input type=\"name\" name=\"name\" id=\"exampleEmail\" placeholder=\"event name\" onChange={(e) => onValueChange(e)}/>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"date\">Event Date</Label>\n            <Input type=\"date\"  id=\"exampleText\" placeholder=\"event date\" onChange={(e) => onValueChange(e)}/>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"description\">description</Label>\n            <Input type=\"textarea\" id=\"exampleText\" placeholder=\"event description\"  onChange={(e) => onValueChange(e)} />\n            </FormGroup>\n            <Button onClick={() => addEventDetails()}>Add Events</Button>\n            <Link to=\"/all\" className=\"btn btn-primary ml-2\"><Button>Cancel</Button></Link>\n        </Form>\n    );\n};\n\nexport default EditEvents;","/Users/mac/Documents/request/src/components/NotFound.js",[],[],"/Users/mac/Documents/request/src/components/CodeFound.js",[],[],"/Users/mac/Documents/request/src/components/AddEvents.js",["99","100"],[],"import React, { useState } from 'react';\nimport { addEvent } from '../service/api';\nimport {useNavigate} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport {Link} from 'react-router-dom'\n\nconst initialValue = {\n    name: '',\n    description: '',\n    event_date: '',\n    location: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\n\n\nconst AddEvents = () => {\n    let navigate = useNavigate();\n    const classes = useStyles();\n    const [event, setEvents] = useState(initialValue);\n\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setEvents({...event, [e.target.name]: e.target.value})\n    }\n\n    const addEventDetails = async() => {\n        await addEvent(event);\n        navigate.push('./all');\n    }\n    \n    return (\n        <Form>\n            <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Add Event</Typography>\n            <Label for=\"exampleSelect\">Select Location</Label>\n            <Input type=\"select\" id=\"exampleSelect\" placeholder=\"select location\">\n                <option></option>          \n            </Input>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"exampleEmail\">Name</Label>\n            <Input type=\"name\" name=\"name\" id=\"exampleEmail\" placeholder=\"event name\" />\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"date\">Event Date</Label>\n            <Input type=\"date\"  id=\"exampleText\" placeholder=\"event date\" />\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"description\">description</Label>\n            <Input type=\"textarea\" id=\"exampleText\" placeholder=\"event description\" />\n            </FormGroup>\n            <Button onClick={() => addEventDetails()}>Add Events</Button>\n            <Link to=\"/all\" className=\"btn btn-primary ml-2\"><Button>Cancel</Button></Link>\n        </Form>\n    );\n};\n\nexport default AddEvents;","/Users/mac/Documents/request/src/service/api.js",[],[],"/Users/mac/Documents/request/src/components/cities/AllCities.js",["101"],[],"/Users/mac/Documents/request/src/components/cities/EditCities.js",[],["102","103"],"/Users/mac/Documents/request/src/components/cities/AddCities.js",["104","105","106"],[],"import react, { useState } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport { addCities } from '../../service/api';\n\nconst initialValue = {\n    name: '',\n    code: '',\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst AddCities = () => {\n    const [cities, setCities] = useState(initialValue);\n    const { name, code,  } = cities;\n    const classes = useStyles();\n    let navigate = useNavigate();\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setCities({...cities, [e.target.name]: e.target.value})\n    }\n\n    const addCitiesDetails = async() => {\n        await addCities(cities);\n        navigate.push('./all');\n    }\n\n    return (\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Add Cities</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Code</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => addCitiesDetails()}>Add Cities</Button>\n            </FormControl>\n        </FormGroup>\n    )\n}\n\nexport default AddCities;","/Users/mac/Documents/request/src/components/cities/Cities.js",[],[],"/Users/mac/Documents/request/src/components/location/AllLocations.js",["107"],[],"import React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom';\nimport { getLocations, deleteLocations } from '../../service/api';\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: '50%',\n        margin: '30px 10px 10px 30px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 15\n        }\n    }\n})\n\nfunction AllLocate() {\n    const [locate, setLocate] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllLocations();\n    }, []);\n\n\n    const getAllLocations = async () => {\n        let response = await getLocations();\n        setLocate(response.data);\n    }\n\n    const deleteLocateData = async (id) => {\n        await deleteLocations(id);\n        getAllLocations();\n    }\n\n    return (\n        <>\n      <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>NÂº</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Rent</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Phone</TableCell>\n                    <TableCell>Contact Person</TableCell>\n                    <TableCell>Coordinates</TableCell>\n                    <TableCell>Street Number</TableCell>\n                    <TableCell>Street Name</TableCell>\n                    <TableCell>Code Postal</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Date Created</TableCell>\n                    <TableCell>Date Created</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {locate.map((cities) => (\n                    <TableRow className={classes.row} key={locate.id}>\n                        <TableCell>{cities.id}</TableCell>\n                        <TableCell>{cities.name}</TableCell>\n                        <TableCell>{cities.rent}</TableCell>\n                        <TableCell>{cities.email}</TableCell>\n                        <TableCell>{cities.phone}</TableCell>\n                        <TableCell>{cities.contact_person}</TableCell>\n                        <TableCell>{cities.lon}</TableCell>\n                        <TableCell>{cities.lat}</TableCell>\n                        <TableCell>{cities.street_number}</TableCell>\n                        <TableCell>{cities.street_name}</TableCell>\n                        <TableCell>{cities.postal_code}</TableCell>\n                        <TableCell>{cities.status}</TableCell>\n                        <TableCell>{cities.time_added}</TableCell>\n                        <TableCell>\n                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:5}} element={Link} to={`/edit-l/${locate.id}`}>Edit</Button>\n                        </TableCell>\n                        <TableCell>\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteLocateData(cities.id)}>Delete</Button> \n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n        <br/>\n        <div className=\"d-flex justify-content-center\">\n            <Link to=\"/add-l\" type=\"button\" className=\"btn btn-secondary ml-2\"><Button>Add Location</Button></Link>\n        </div>\n        </>\n    )\n}\n\nexport default AllLocate;","/Users/mac/Documents/request/src/components/location/EditLocation.js",["108"],["109"],"import React, { useState, useEffect } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { getLocations, editLocations } from '../../service/api';\nimport {Link} from 'react-router-dom'\n\nconst initialValue = {\n    name: '',\n    rent: '',\n    email: '',\n    phone: '',\n    lon: '',\n    lat: '',\n    street_number: '',\n    street_name: '',\n    postal_code: '',\n    city: '',\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\n\n\nconst EditLocations = () => {\n    let navigate = useNavigate();\n    const classes = useStyles();\n    const { id } = useParams();\n    const [locate, setLocate] = useState(initialValue);\n\n\n    useEffect(() => {\n        loadEventDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const loadEventDetails = async() => {\n        const response = await getLocations(id);\n        setLocate(response.data);\n    }\n\n    console.log('AAAAAAA?????????', loadEventDetails)\n\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setLocate({...locate, [e.target.name]: e.target.value})\n    }\n\n    console.log('DDDDDDDDDD????????????', onValueChange)\n\n    const addEventDetails = async() => {\n        await editLocations(id, locate);\n        navigate.push('/all');\n    }\n    \n    return (\n        <Form>\n            <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <Label for=\"exampleSelect\">Select Location</Label>\n            <Input type=\"select\" id=\"exampleSelect\" placeholder=\"select location\" onChange={(e) => onValueChange(e)}>\n                <option></option>          \n            </Input>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"exampleEmail\">Name</Label>\n            <Input type=\"name\" name=\"name\" id=\"exampleEmail\" placeholder=\"event name\" onChange={(e) => onValueChange(e)}/>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"date\">Event Date</Label>\n            <Input type=\"date\"  id=\"exampleText\" placeholder=\"event date\" onChange={(e) => onValueChange(e)}/>\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"description\">description</Label>\n            <Input type=\"textarea\" id=\"exampleText\" placeholder=\"event description\"  onChange={(e) => onValueChange(e)} />\n            </FormGroup>\n            <Button onClick={() => addEventDetails()}>Add Events</Button>\n            <Link to=\"/all-l\" className=\"btn btn-primary ml-2\"><Button>Cancel</Button></Link>\n        </Form>\n    );\n};\n\nexport default EditLocations;","/Users/mac/Documents/request/src/components/location/AddLocation.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":17},{"ruleId":"129","severity":1,"message":"134","line":19,"column":8,"nodeType":"131","messageId":"132","endLine":19,"endColumn":14},{"ruleId":"129","severity":1,"message":"135","line":3,"column":18,"nodeType":"131","messageId":"132","endLine":3,"endColumn":22},{"ruleId":"129","severity":1,"message":"136","line":2,"column":39,"nodeType":"131","messageId":"132","endLine":2,"endColumn":44},{"ruleId":"129","severity":1,"message":"137","line":3,"column":49,"nodeType":"131","messageId":"132","endLine":3,"endColumn":57},{"ruleId":"138","severity":1,"message":"139","line":37,"column":8,"nodeType":"140","endLine":37,"endColumn":10,"suggestions":"141","suppressions":"142"},{"ruleId":"129","severity":1,"message":"137","line":4,"column":49,"nodeType":"131","messageId":"132","endLine":4,"endColumn":57},{"ruleId":"129","severity":1,"message":"143","line":33,"column":11,"nodeType":"131","messageId":"132","endLine":33,"endColumn":24},{"ruleId":"129","severity":1,"message":"136","line":2,"column":39,"nodeType":"131","messageId":"132","endLine":2,"endColumn":44},{"ruleId":"138","severity":1,"message":"144","line":32,"column":8,"nodeType":"140","endLine":32,"endColumn":10,"suggestions":"145","suppressions":"146"},{"ruleId":"129","severity":1,"message":"147","line":41,"column":15,"nodeType":"131","messageId":"132","endLine":41,"endColumn":23,"suppressions":"148"},{"ruleId":"129","severity":1,"message":"149","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"150","line":23,"column":13,"nodeType":"131","messageId":"132","endLine":23,"endColumn":17},{"ruleId":"129","severity":1,"message":"151","line":23,"column":19,"nodeType":"131","messageId":"132","endLine":23,"endColumn":23},{"ruleId":"129","severity":1,"message":"136","line":2,"column":39,"nodeType":"131","messageId":"132","endLine":2,"endColumn":44},{"ruleId":"129","severity":1,"message":"137","line":3,"column":49,"nodeType":"131","messageId":"132","endLine":3,"endColumn":57},{"ruleId":"138","severity":1,"message":"139","line":43,"column":8,"nodeType":"140","endLine":43,"endColumn":10,"suggestions":"152","suppressions":"153"},{"ruleId":"129","severity":1,"message":"149","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":9},{"ruleId":"154","severity":1,"message":"158","line":11,"column":5,"nodeType":"156","messageId":"157","endLine":11,"endColumn":9},{"ruleId":"154","severity":1,"message":"155","line":12,"column":5,"nodeType":"156","messageId":"157","endLine":12,"endColumn":9},{"ruleId":"154","severity":1,"message":"158","line":13,"column":5,"nodeType":"156","messageId":"157","endLine":13,"endColumn":9},{"ruleId":"154","severity":1,"message":"155","line":14,"column":5,"nodeType":"156","messageId":"157","endLine":14,"endColumn":9},{"ruleId":"154","severity":1,"message":"158","line":15,"column":5,"nodeType":"156","messageId":"157","endLine":15,"endColumn":9},{"ruleId":"154","severity":1,"message":"155","line":16,"column":5,"nodeType":"156","messageId":"157","endLine":16,"endColumn":9},{"ruleId":"154","severity":1,"message":"158","line":17,"column":5,"nodeType":"156","messageId":"157","endLine":17,"endColumn":9},{"ruleId":"154","severity":1,"message":"155","line":18,"column":5,"nodeType":"156","messageId":"157","endLine":18,"endColumn":9},{"ruleId":"154","severity":1,"message":"158","line":19,"column":5,"nodeType":"156","messageId":"157","endLine":19,"endColumn":9},{"ruleId":"154","severity":1,"message":"155","line":20,"column":5,"nodeType":"156","messageId":"157","endLine":20,"endColumn":9},{"ruleId":"154","severity":1,"message":"158","line":21,"column":5,"nodeType":"156","messageId":"157","endLine":21,"endColumn":9},{"ruleId":"129","severity":1,"message":"150","line":36,"column":13,"nodeType":"131","messageId":"132","endLine":36,"endColumn":17},{"ruleId":"129","severity":1,"message":"151","line":36,"column":19,"nodeType":"131","messageId":"132","endLine":36,"endColumn":23},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'CodeFound' is defined but never used.","'Cities' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","'FormText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadEventDetails'. Either include it or remove the dependency array.","ArrayExpression",["161"],["162"],"'onValueChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadUserDetails'. Either include it or remove the dependency array.",["163"],["164"],"'response' is assigned a value but never used.",["165"],"'react' is defined but never used.","'name' is assigned a value but never used.","'code' is assigned a value but never used.",["166"],["167"],"no-dupe-keys","Duplicate key 'name'.","ObjectExpression","unexpected","Duplicate key 'code'.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"kind":"170","justification":"171"},{"desc":"172","fix":"173"},{"kind":"170","justification":"171"},{"kind":"170","justification":"171"},{"desc":"168","fix":"174"},{"kind":"170","justification":"171"},"Update the dependencies array to be: [loadEventDetails]",{"range":"175","text":"176"},"directive","","Update the dependencies array to be: [loadUserDetails]",{"range":"177","text":"178"},{"range":"179","text":"176"},[905,907],"[loadEventDetails]",[868,870],"[loadUserDetails]",[1010,1012]]